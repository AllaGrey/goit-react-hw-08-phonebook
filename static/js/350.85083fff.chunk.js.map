{"version":3,"file":"static/js/350.85083fff.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage.jsx","pages/HomePage.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field as FormikField } from 'formik';\n\n\n\nexport const FormContainer = styled.div`\n  width: 350px;\n  text-align: center;\n  margin-left: auto;\n  margin: auto;\n  background-color: antiquewhite;\n  padding: 30px 20px;\n  border-radius: 5px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  gap: 5px;\n`;\nexport const Field = styled(FormikField)`\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  outline: none;\n  height: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  margin-top: 10px;\n  border: 0;\n  border-radius: 5px;\n  padding: 5px;\n  color: white;\n  background-color: green;\n  cursor: pointer;\n\n  &:hover{\n    background-color: transparent;\n  }\n`;\n","import { FormContainer, Label, Button, Title } from './ContactForm.styled';\nimport { Field } from './ContactForm.styled';\nimport { Formik, Form } from 'formik';\nimport { addContact } from 'redux/contactsOperations';\nimport { getContacts } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\nexport const ContactsForm = () => {\n\n  const dispatch = useDispatch()\n  const contacts = useSelector(getContacts)\n\n\n  const handleSubmit = (values, { resetForm }) => {\n    \n    const isDublicate = contacts.find(\n      ({ name }) => name.toLocaleLowerCase() === values.name.toLowerCase()\n    );\n    isDublicate ? alert(`${values.name} is already in contacts.`) : dispatch(addContact(values));\n    resetForm();\n\n  \n  };\n\n  return (\n    <FormContainer>\n      <Title>Phonebook</Title>\n      <Formik initialValues={{ name: '', number: '' }} onSubmit={handleSubmit}>\n        <Form>\n          <Label>\n            Name\n            <Field\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </Label>\n          <Label>\n            Number\n            <Field\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Label>\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label``;\nexport const Input = styled.input`\n  margin-left: 5px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  height: 20px;\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { FormContainer } from 'components/ContactsForm/ContactForm.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter)\n  const dispatch = useDispatch()\n  \n  const onChangeFilter = event => {\n    const filterTarget = event.target.value.trim();\n    dispatch(filterContacts(filterTarget))\n    \n  };\n\n  return (\n    <FormContainer>\n      <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={onChangeFilter} />\n    </Label>\n</FormContainer>  \n  );\n};\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 350px;\n  text-align: center;\n  background-color: darkgrey;\n  color: white;\n  border: 1px solid wheat;\n  border-radius: 10px;\n  padding: 10px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Title = styled.h2``;\nexport const ContactList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  justify-content: space-around;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0;\n`;\nexport const Button = styled.button`\n  margin-left: 10px;\n  width: 60px;\n  border: none;\n  padding: 3px;\n  border-radius: 5px;\n  background-color: red;\n  color: white;\n  display: inline;\n\n  &:hover {\n    background-color: transparent;\n  }\n`;\n","import { Item, Button } from './Contact.styled';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contactsOperations';\nimport { useDispatch } from 'react-redux';\n\nexport const Contact = ({ contact: { id, name, number }}) => {\n  const dispatch = useDispatch()\n  return (\n    <Item>\n      {name} {number}\n       <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  contacts: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n};\n","import { Contact } from 'components/Contact/Contact';\nimport { getStatusFilter } from 'redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getIsLoading } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactsOperations';\nimport { FormContainer } from 'components/ContactsForm/ContactForm.styled';\n\nexport const Contacts = () => {\n\n  const filter = useSelector(getStatusFilter)\n  const contacts = useSelector(getContacts)\n  const isLoading = useSelector(getIsLoading)\n  const dispatch = useDispatch()\n\n  let filteredContacts = []\n\n   useEffect(() => {\n    dispatch(fetchContacts()) \n\n}, [dispatch])\n\n\n  if (contacts) {\n    filteredContacts = contacts.filter(contact =>\n    (contact.name.toLowerCase().includes(filter.toLowerCase())\n    ));\n}\n  \n  return(<>  \n    <FormContainer>\n      {isLoading && <b>Loading contacts...</b>}\n      {filteredContacts.length > 0 && filteredContacts.map(filteredContact => (\n      <Contact key={filteredContact.id} contact={filteredContact} />\n      ))}\n    </FormContainer>\n  </>)\n  \n};\n","import { ContactsForm } from \"components/ContactsForm/ContactsForm\"\nimport { Filter } from \"components/Filter/Filter\"\nimport { ContactList, Title } from \"components/App.styled\"\nimport { Contacts } from \"components/Contacts/Contacts\"\nimport { Section } from \"./HomePage.styled\"\n\n\nexport default function PhoneBook () {\n    return (\n        <Section>\n        <ContactsForm  />\n        <Title>Contacts</Title>\n        <Filter />\n        <ContactList>\n            <Contacts  />\n        </ContactList>\n        </Section>\n    )\n}","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\"\n\nexport const Section = styled.section`\ntext-align: center;\npadding-top: 15px;\n`\n\nexport const StyledLink = styled(Link)`\ndisplay: block;\nmargin-bottom: 10px;\n`"],"names":["FormContainer","styled","Title","Label","Field","FormikField","Button","ContactsForm","dispatch","useDispatch","contacts","useSelector","getContacts","initialValues","name","number","onSubmit","values","resetForm","find","toLocaleLowerCase","toLowerCase","alert","addContact","type","pattern","title","required","Input","Filter","filter","state","value","onChange","event","filterTarget","target","trim","filterContacts","ContactList","Item","Contact","contact","id","onClick","deleteContact","Contacts","getStatusFilter","isLoading","getIsLoading","filteredContacts","useEffect","fetchContacts","includes","length","map","filteredContact","PhoneBook","Section","StyledLink","Link"],"sourceRoot":""}